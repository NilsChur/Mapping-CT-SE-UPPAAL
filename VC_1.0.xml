<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.5//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_5.dtd'>
<nta>
	<declaration>// Place global declarations here.


// Variables of the Model
int y[4] = {0, 0, 0, 0};
int ref[4] = {0, 0, 0, 0};
int e;

// limit range of variable
// int[0,250] a;

// Variables for the Properties
int over = 150; // in % 110 = 10% overshoot
int eps = 5; // steady-state error 
int t_settle = 37; // settling time in (k)-steps k = t_set/sample time e.g 3.6sec/0.1sec = 36
int t_rise = 5; // rise time in (k)-steps k = t_rise/sample time e.g. 1sec/0.1sec = 10
int t_global = 0;
int counter = 0; // Counter how long the system must stay in bounded to be considered settled/stable
int c_limit = 10; // Time the system must stay in bounded to able to transit to stable (10 = 1sec)

broadcast chan ref_change;
urgent broadcast chan calc;
urgent broadcast chan stable;


// With integers
void step(){
    
    // Coeffizients for u[k-i] and y[k-i]
    const int A[4] = {0, 469, -12, -430};
    const int B[4] = {-10000, 27275, -25489, 8187};
    const int scale = abs(B[0]);
    ref[0] = scale;

    //int u_temp;
    //int y_temp;

    // Discret transfer function z-domain splitt in u and y part
    //u_temp = A[0]*ref[0] + A[1]*ref[1] + A[2]*ref[2] + A[3]*ref[3];
    //y_temp = B[1]*y[1] + B[2]*y[2] + B[3]*y[3]; 

    y[0] = (A[0]*ref[0] + A[1]*ref[1] + A[2]*ref[2] + A[3]*ref[3] + B[1]*y[1] + B[2]*y[2] + B[3]*y[3])/scale;

    // Moving Values in Time
    y[3] = y[2];
    y[2] = y[1];
    y[1] = y[0];

    ref[3] = ref[2];
    ref[2] = ref[1];
    ref[1] = ref[0];
    //ref[0] = scale;
}

void calc_error(){
    e = abs(ref[0] - y[0])/100;    
}

</declaration>
	<template>
		<name>Observer</name>
		<location id="id0" x="-442" y="204">
			<name x="-459" y="221">Rest</name>
		</location>
		<location id="id1" x="-25" y="-76">
			<name x="-8" y="-84">Rise</name>
		</location>
		<location id="id2" x="-25" y="204">
			<name x="-25" y="221">Transient</name>
		</location>
		<location id="id3" x="-442" y="-76">
			<name x="-510" y="-119">Bounded</name>
			<label kind="invariant" x="-544" y="-102">counter&lt;=10</label>
		</location>
		<location id="id4" x="-195" y="-238">
			<name x="-280" y="-263">Overshoot</name>
		</location>
		<init ref="id0"/>
		<transition id="id5">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="161" y="272">y[0]&gt;over*ref[0]/100</label>
			<label kind="synchronisation" x="221" y="289">calc?</label>
			<nail x="238" y="272"/>
			<nail x="382" y="-17"/>
			<nail x="238" y="-306"/>
		</transition>
		<transition id="id6">
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-212" y="42">e&lt;=eps &amp;&amp; 
t_global &gt; t_rise</label>
			<label kind="synchronisation" x="-272" y="17">calc?</label>
			<label kind="assignment" x="-170" y="85">counter=0</label>
			<label kind="testcode">test</label>
			<nail x="-178" y="102"/>
			<nail x="-340" y="-8"/>
		</transition>
		<transition id="id7">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-365" y="85">e &gt; eps</label>
			<label kind="synchronisation" x="-374" y="68">calc?</label>
			<nail x="-374" y="34"/>
			<nail x="-212" y="153"/>
		</transition>
		<transition id="id8">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-8" y="-153">e&gt;eps &amp;&amp;
y[0]&lt;=over*ref[0]/100</label>
			<label kind="synchronisation" x="-59" y="-153">calc?</label>
			<nail x="-42" y="-128"/>
			<nail x="-8" y="-128"/>
		</transition>
		<transition id="id9">
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="-272" y="-306">y[0]&gt;over*ref[0]/100</label>
			<label kind="synchronisation" x="-238" y="-323">calc?</label>
			<nail x="-229" y="-289"/>
			<nail x="-195" y="-289"/>
		</transition>
		<transition id="id10">
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="-76" y="272">e&gt;eps</label>
			<label kind="synchronisation" x="-76" y="255">calc?</label>
			<nail x="-67" y="238"/>
			<nail x="-42" y="255"/>
		</transition>
		<transition id="id11">
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="-603" y="59">e&lt;=eps &amp;&amp;
counter&gt;=c_limit</label>
			<label kind="synchronisation" x="-603" y="34">stable!</label>
		</transition>
		<transition id="id12">
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="187" y="-34">y[0]&lt;=over*ref[0]/100
&amp;&amp; e&gt;=eps</label>
			<label kind="synchronisation" x="187" y="8">calc?</label>
			<nail x="187" y="-238"/>
			<nail x="187" y="204"/>
		</transition>
		<transition id="id13">
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-629" y="-229">y[0] &gt; over*ref[0]/100
&amp;&amp; e &gt; eps</label>
			<label kind="synchronisation" x="-493" y="-204">calc?</label>
			<nail x="-442" y="-238"/>
		</transition>
		<transition id="id14">
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-382" y="-187">e &lt;= eps</label>
			<label kind="synchronisation" x="-382" y="-170">calc?</label>
			<label kind="assignment" x="-424" y="-157">counter=0</label>
		</transition>
		<transition id="id15">
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="-578" y="-68">e &lt;= eps</label>
			<label kind="synchronisation" x="-544" y="-51">calc?</label>
			<label kind="assignment" x="-561" y="-34">counter++</label>
			<nail x="-510" y="-76"/>
			<nail x="-476" y="-17"/>
		</transition>
		<transition id="id16">
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-238" y="-110">e &lt;= eps</label>
			<label kind="synchronisation" x="-229" y="-93">calc?</label>
			<label kind="assignment" x="-246" y="-76">counter=0</label>
		</transition>
		<transition id="id17">
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="-153" y="-212">y[0]&gt;over*ref[0]/100</label>
			<label kind="synchronisation" x="-127" y="-195">calc?</label>
		</transition>
		<transition id="id18">
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-34">y[0]&gt;=90*ref[0]/100 &amp;&amp;
t_global&lt;=t_rise &amp;&amp;
y[0]&gt;0 &amp;&amp; ref[0]&gt;0</label>
			<label kind="synchronisation" x="-17" y="25">calc?</label>
		</transition>
		<transition id="id19">
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-280" y="204">ref_change?</label>
		</transition>
	</template>
	<template>
		<name>Sync</name>
		<location id="id20" x="-323" y="0">
			<name x="-333" y="-34">Init</name>
		</location>
		<location id="id21" x="-102" y="0">
			<name x="-85" y="0">Calculating</name>
			<label kind="invariant" x="-85" y="17">t_global&lt;=100</label>
			<committed/>
		</location>
		<location id="id22" x="255" y="0">
			<name x="229" y="17">Stable</name>
		</location>
		<location id="id23" x="255" y="170">
			<name x="229" y="136">Timeout</name>
		</location>
		<init ref="id20"/>
		<transition id="id24">
			<source ref="id21"/>
			<target ref="id23"/>
			<label kind="guard" x="-25" y="153">t_global == 100</label>
			<nail x="-102" y="170"/>
		</transition>
		<transition id="id25">
			<source ref="id21"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-153" y="-102">calc!</label>
			<label kind="assignment" x="-153" y="-161">step(),
calc_error(),
t_global++</label>
			<nail x="-153" y="-77"/>
			<nail x="-59" y="-77"/>
		</transition>
		<transition id="id26">
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="guard" x="-42" y="-34">(t_global-counter)&lt;=t_settle</label>
			<label kind="synchronisation" x="42" y="-17">stable?</label>
		</transition>
		<transition id="id27">
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-255" y="-17">ref_change!</label>
		</transition>
	</template>
	<template>
		<name>Car_Sync_noDL</name>
		<location id="id28" x="-442" y="-34">
			<name x="-452" y="-68">Init</name>
		</location>
		<location id="id29" x="-221" y="-34">
			<name x="-204" y="-34">Calculating</name>
			<label kind="invariant" x="-204" y="-17">t_global&lt;=100</label>
			<committed/>
		</location>
		<location id="id30" x="136" y="-34">
			<name x="110" y="-17">Stable</name>
			<label kind="comments" x="179" y="-68">Only enters this state if the
Observer has entered stable
within t&lt;t_settle.</label>
		</location>
		<location id="id31" x="136" y="136">
			<name x="110" y="102">Timeout</name>
		</location>
		<init ref="id28"/>
		<transition id="id32">
			<source ref="id31"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-237" y="153">ref_change!</label>
			<label kind="assignment" x="-237" y="170">t_global=0</label>
			<label kind="comments" x="-119" y="178">added for anti deadlock</label>
			<nail x="136" y="170"/>
			<nail x="-255" y="170"/>
			<nail x="-255" y="0"/>
		</transition>
		<transition id="id33">
			<source ref="id30"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-126" y="-119">ref_change!</label>
			<label kind="assignment" x="-126" y="-102">t_global=0</label>
			<label kind="comments" x="-68" y="-144">added for anti deadlock</label>
			<nail x="136" y="-102"/>
			<nail x="-144" y="-102"/>
		</transition>
		<transition id="id34">
			<source ref="id29"/>
			<target ref="id31"/>
			<label kind="guard" x="-144" y="119">t_global == 100</label>
			<nail x="-221" y="136"/>
		</transition>
		<transition id="id35">
			<source ref="id29"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-272" y="-136">calc!</label>
			<label kind="assignment" x="-272" y="-195">step(),
calc_error(),
t_global++</label>
			<label kind="comments" x="-357" y="-263">Calculates next model step/value.
Clock x is 0.
Syncs observer with calc!.</label>
			<nail x="-272" y="-111"/>
			<nail x="-178" y="-111"/>
		</transition>
		<transition id="id36">
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="guard" x="-161" y="-68">(t_global-counter)&lt;=t_settle</label>
			<label kind="synchronisation" x="-77" y="-51">stable?</label>
		</transition>
		<transition id="id37">
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-374" y="-51">ref_change!</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
// Process = Observer, Car_Calc, Ref_Generator;
// List one or more processes to be composed into a system.
// system Process;

system Observer, Sync;</system>
	<queries>
		<option key="--diagnostic" value="0"/>
		<query>
			<formula>A[]!Observer.Overshoot</formula>
			<comment>Forbidden State Overshoot is never reached. (If valid)
Equivalent to Overshoot Property! (strong)</comment>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:00 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A&lt;&gt;!Observer.Overshoot</formula>
			<comment>Forbidden State Overshoot isn't eventually reached. (If valid)
Equivalent to Overshoot Property! (weak)</comment>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:02 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>Observer.Rise--&gt;Observer.Bounded</formula>
			<comment>System meets Rise Time and is Bounded at some time.</comment>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:04 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Sync.Stable</formula>
			<comment>It is possible to reach a settled State within the settling Time.
Equivalent to Stability Property!</comment>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:07 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>Observer.Rise--&gt;Sync.Stable</formula>
			<comment>System meets Rise State and settled State within settling time.
Is equivalent to valid Rise Time Property and Settling Time Property!
</comment>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:09 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;(Observer.Rest &amp;&amp; Sync.Stable)</formula>
			<comment>Stable within settling time</comment>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:12 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>Observer.Rise --&gt;(Observer.Rest &amp;&amp; Sync.Stable)</formula>
			<comment>Implies that if the the Rise hold the system also settles with in the settling time.</comment>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:14 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A&lt;&gt;(Observer.Rest &amp;&amp; (t_global-counter)&lt;=t_settle)</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-07-03 14:47:16 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>A&lt;&gt;(Observer.Transient)</formula>
			<comment>Don't know why not true. At some time the system should enter the Transient State?</comment>
			<result outcome="failure" type="quality" timestamp="2023-05-24 10:52:44 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Sync.Timeout</formula>
			<comment>Timeout State is not reachable!</comment>
		</query>
		<query>
			<formula>A&lt;&gt;Sync.Stable</formula>
			<comment/>
			<result outcome="failure" type="quality" timestamp="2023-05-24 10:40:05 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[]!Sync.Timeout</formula>
			<comment>The system always settles and never runs into a timeout.</comment>
			<result outcome="success" type="quality" timestamp="2023-05-24 10:40:02 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>E&lt;&gt;(Observer.Rest &amp;&amp; t_global&gt;0)</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-05-22 15:16:28 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Observer.Rise</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-05-19 12:30:36 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Observer.Overshoot</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-05-19 12:30:40 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Observer.Bounded</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-05-19 12:30:42 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Observer.Transient</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-05-19 12:30:44 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Sync.Calculating</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-05-22 15:16:33 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Sync.Stable</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2023-05-22 15:16:36 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;Sync.Timeout</formula>
			<comment/>
			<result outcome="failure" type="quality" timestamp="2023-05-24 11:29:43 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>A&lt;&gt;(Observer.Rest &amp;&amp; (t_global-counter)&lt;=t_settle)</formula>
			<comment>Test</comment>
			<result outcome="success" type="quality" timestamp="2023-05-24 10:51:48 +0200">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
	</queries>
</nta>
